{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "h_IEUaRtHA7A"
      },
      "source": [
        "# Sentiment-Analyse"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Setup and Installation"
      ],
      "metadata": {
        "id": "OpzpZI8rSWrR"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0ae_BsF2HA7O",
        "outputId": "5b925f8f-0403-4c4e-fd19-d3cd88b2185b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: transformers[torch] in /usr/local/lib/python3.10/dist-packages (4.41.2)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (3.14.0)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (0.23.2)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (1.25.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (24.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (6.0.1)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (2024.5.15)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (2.31.0)\n",
            "Requirement already satisfied: tokenizers<0.20,>=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (0.19.1)\n",
            "Requirement already satisfied: safetensors>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (0.4.3)\n",
            "Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (4.66.4)\n",
            "Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (2.3.0+cu121)\n",
            "Requirement already satisfied: accelerate>=0.21.0 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (0.31.0)\n",
            "Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from accelerate>=0.21.0->transformers[torch]) (5.9.5)\n",
            "Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.23.0->transformers[torch]) (2023.6.0)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.23.0->transformers[torch]) (4.12.1)\n",
            "Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (1.12.1)\n",
            "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (3.3)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (3.1.4)\n",
            "Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (12.1.105)\n",
            "Requirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (12.1.105)\n",
            "Requirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (12.1.105)\n",
            "Requirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (8.9.2.26)\n",
            "Requirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (12.1.3.1)\n",
            "Requirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (11.0.2.54)\n",
            "Requirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (10.3.2.106)\n",
            "Requirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (11.4.5.107)\n",
            "Requirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (12.1.0.106)\n",
            "Requirement already satisfied: nvidia-nccl-cu12==2.20.5 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (2.20.5)\n",
            "Requirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (12.1.105)\n",
            "Requirement already satisfied: triton==2.3.0 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (2.3.0)\n",
            "Requirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107->torch->transformers[torch]) (12.5.40)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (2024.6.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch->transformers[torch]) (2.1.5)\n",
            "Requirement already satisfied: mpmath<1.4.0,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy->torch->transformers[torch]) (1.3.0)\n",
            "Requirement already satisfied: wordcloud in /usr/local/lib/python3.10/dist-packages (1.9.3)\n",
            "Requirement already satisfied: numpy>=1.6.1 in /usr/local/lib/python3.10/dist-packages (from wordcloud) (1.25.2)\n",
            "Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from wordcloud) (9.4.0)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from wordcloud) (3.7.1)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (1.2.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (4.53.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (1.4.5)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (24.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (3.1.2)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib->wordcloud) (2.8.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib->wordcloud) (1.16.0)\n",
            "Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.41.2)\n",
            "Requirement already satisfied: gradio in /usr/local/lib/python3.10/dist-packages (4.36.0)\n",
            "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.14.0)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.23.2)\n",
            "Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.25.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (24.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2024.5.15)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n",
            "Requirement already satisfied: tokenizers<0.20,>=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.1)\n",
            "Requirement already satisfied: safetensors>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.3)\n",
            "Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.4)\n",
            "Requirement already satisfied: aiofiles<24.0,>=22.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (23.2.1)\n",
            "Requirement already satisfied: altair<6.0,>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (4.2.2)\n",
            "Requirement already satisfied: fastapi in /usr/local/lib/python3.10/dist-packages (from gradio) (0.111.0)\n",
            "Requirement already satisfied: ffmpy in /usr/local/lib/python3.10/dist-packages (from gradio) (0.3.2)\n",
            "Requirement already satisfied: gradio-client==1.0.1 in /usr/local/lib/python3.10/dist-packages (from gradio) (1.0.1)\n",
            "Requirement already satisfied: httpx>=0.24.1 in /usr/local/lib/python3.10/dist-packages (from gradio) (0.27.0)\n",
            "Requirement already satisfied: importlib-resources<7.0,>=1.3 in /usr/local/lib/python3.10/dist-packages (from gradio) (6.4.0)\n",
            "Requirement already satisfied: jinja2<4.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (3.1.4)\n",
            "Requirement already satisfied: markupsafe~=2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.1.5)\n",
            "Requirement already satisfied: matplotlib~=3.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (3.7.1)\n",
            "Requirement already satisfied: orjson~=3.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (3.10.3)\n",
            "Requirement already satisfied: pandas<3.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.0.3)\n",
            "Requirement already satisfied: pillow<11.0,>=8.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (9.4.0)\n",
            "Requirement already satisfied: pydantic>=2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.7.3)\n",
            "Requirement already satisfied: pydub in /usr/local/lib/python3.10/dist-packages (from gradio) (0.25.1)\n",
            "Requirement already satisfied: python-multipart>=0.0.9 in /usr/local/lib/python3.10/dist-packages (from gradio) (0.0.9)\n",
            "Requirement already satisfied: ruff>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from gradio) (0.4.8)\n",
            "Requirement already satisfied: semantic-version~=2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.10.0)\n",
            "Requirement already satisfied: tomlkit==0.12.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (0.12.0)\n",
            "Requirement already satisfied: typer<1.0,>=0.12 in /usr/local/lib/python3.10/dist-packages (from gradio) (0.12.3)\n",
            "Requirement already satisfied: typing-extensions~=4.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (4.12.1)\n",
            "Requirement already satisfied: urllib3~=2.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (2.0.7)\n",
            "Requirement already satisfied: uvicorn>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from gradio) (0.30.1)\n",
            "Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from gradio-client==1.0.1->gradio) (2023.6.0)\n",
            "Requirement already satisfied: websockets<12.0,>=10.0 in /usr/local/lib/python3.10/dist-packages (from gradio-client==1.0.1->gradio) (11.0.3)\n",
            "Requirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair<6.0,>=4.2.0->gradio) (0.4)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.10/dist-packages (from altair<6.0,>=4.2.0->gradio) (4.19.2)\n",
            "Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair<6.0,>=4.2.0->gradio) (0.12.1)\n",
            "Requirement already satisfied: anyio in /usr/local/lib/python3.10/dist-packages (from httpx>=0.24.1->gradio) (3.7.1)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from httpx>=0.24.1->gradio) (2024.6.2)\n",
            "Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.10/dist-packages (from httpx>=0.24.1->gradio) (1.0.5)\n",
            "Requirement already satisfied: idna in /usr/local/lib/python3.10/dist-packages (from httpx>=0.24.1->gradio) (3.7)\n",
            "Requirement already satisfied: sniffio in /usr/local/lib/python3.10/dist-packages (from httpx>=0.24.1->gradio) (1.3.1)\n",
            "Requirement already satisfied: h11<0.15,>=0.13 in /usr/local/lib/python3.10/dist-packages (from httpcore==1.*->httpx>=0.24.1->gradio) (0.14.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib~=3.0->gradio) (1.2.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib~=3.0->gradio) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib~=3.0->gradio) (4.53.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib~=3.0->gradio) (1.4.5)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib~=3.0->gradio) (3.1.2)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib~=3.0->gradio) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0,>=1.0->gradio) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0,>=1.0->gradio) (2024.1)\n",
            "Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2.0->gradio) (0.7.0)\n",
            "Requirement already satisfied: pydantic-core==2.18.4 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2.0->gradio) (2.18.4)\n",
            "Requirement already satisfied: click>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0,>=0.12->gradio) (8.1.7)\n",
            "Requirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0,>=0.12->gradio) (1.5.4)\n",
            "Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0,>=0.12->gradio) (13.7.1)\n",
            "Requirement already satisfied: starlette<0.38.0,>=0.37.2 in /usr/local/lib/python3.10/dist-packages (from fastapi->gradio) (0.37.2)\n",
            "Requirement already satisfied: fastapi-cli>=0.0.2 in /usr/local/lib/python3.10/dist-packages (from fastapi->gradio) (0.0.4)\n",
            "Requirement already satisfied: ujson!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,>=4.0.1 in /usr/local/lib/python3.10/dist-packages (from fastapi->gradio) (5.10.0)\n",
            "Requirement already satisfied: email_validator>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from fastapi->gradio) (2.1.1)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.3.2)\n",
            "Requirement already satisfied: dnspython>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from email_validator>=2.0.0->fastapi->gradio) (2.6.1)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6.0,>=4.2.0->gradio) (23.2.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6.0,>=4.2.0->gradio) (2023.12.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6.0,>=4.2.0->gradio) (0.35.1)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema>=3.0->altair<6.0,>=4.2.0->gradio) (0.18.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib~=3.0->gradio) (1.16.0)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0,>=0.12->gradio) (2.16.1)\n",
            "Requirement already satisfied: exceptiongroup in /usr/local/lib/python3.10/dist-packages (from anyio->httpx>=0.24.1->gradio) (1.2.1)\n",
            "Requirement already satisfied: httptools>=0.5.0 in /usr/local/lib/python3.10/dist-packages (from uvicorn>=0.14.0->gradio) (0.6.1)\n",
            "Requirement already satisfied: python-dotenv>=0.13 in /usr/local/lib/python3.10/dist-packages (from uvicorn>=0.14.0->gradio) (1.0.1)\n",
            "Requirement already satisfied: uvloop!=0.15.0,!=0.15.1,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from uvicorn>=0.14.0->gradio) (0.19.0)\n",
            "Requirement already satisfied: watchfiles>=0.13 in /usr/local/lib/python3.10/dist-packages (from uvicorn>=0.14.0->gradio) (0.22.0)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0,>=0.12->gradio) (0.1.2)\n",
            "Requirement already satisfied: python-docx in /usr/local/lib/python3.10/dist-packages (1.1.2)\n",
            "Requirement already satisfied: lxml>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from python-docx) (4.9.4)\n",
            "Requirement already satisfied: typing-extensions>=4.9.0 in /usr/local/lib/python3.10/dist-packages (from python-docx) (4.12.1)\n",
            "Requirement already satisfied: optuna in /usr/local/lib/python3.10/dist-packages (3.6.1)\n",
            "Requirement already satisfied: alembic>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from optuna) (1.13.1)\n",
            "Requirement already satisfied: colorlog in /usr/local/lib/python3.10/dist-packages (from optuna) (6.8.2)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from optuna) (1.25.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from optuna) (24.0)\n",
            "Requirement already satisfied: sqlalchemy>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from optuna) (2.0.30)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from optuna) (4.66.4)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.10/dist-packages (from optuna) (6.0.1)\n",
            "Requirement already satisfied: Mako in /usr/local/lib/python3.10/dist-packages (from alembic>=1.5.0->optuna) (1.3.5)\n",
            "Requirement already satisfied: typing-extensions>=4 in /usr/local/lib/python3.10/dist-packages (from alembic>=1.5.0->optuna) (4.12.1)\n",
            "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from sqlalchemy>=1.3.0->optuna) (3.0.3)\n",
            "Requirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.10/dist-packages (from Mako->alembic>=1.5.0->optuna) (2.1.5)\n",
            "Requirement already satisfied: optuna-integration in /usr/local/lib/python3.10/dist-packages (3.6.0)\n",
            "Requirement already satisfied: optuna in /usr/local/lib/python3.10/dist-packages (from optuna-integration) (3.6.1)\n",
            "Requirement already satisfied: alembic>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from optuna->optuna-integration) (1.13.1)\n",
            "Requirement already satisfied: colorlog in /usr/local/lib/python3.10/dist-packages (from optuna->optuna-integration) (6.8.2)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from optuna->optuna-integration) (1.25.2)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from optuna->optuna-integration) (24.0)\n",
            "Requirement already satisfied: sqlalchemy>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from optuna->optuna-integration) (2.0.30)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from optuna->optuna-integration) (4.66.4)\n",
            "Requirement already satisfied: PyYAML in /usr/local/lib/python3.10/dist-packages (from optuna->optuna-integration) (6.0.1)\n",
            "Requirement already satisfied: Mako in /usr/local/lib/python3.10/dist-packages (from alembic>=1.5.0->optuna->optuna-integration) (1.3.5)\n",
            "Requirement already satisfied: typing-extensions>=4 in /usr/local/lib/python3.10/dist-packages (from alembic>=1.5.0->optuna->optuna-integration) (4.12.1)\n",
            "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from sqlalchemy>=1.3.0->optuna->optuna-integration) (3.0.3)\n",
            "Requirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.10/dist-packages (from Mako->alembic>=1.5.0->optuna->optuna-integration) (2.1.5)\n"
          ]
        }
      ],
      "source": [
        "!pip install transformers[torch]\n",
        "!pip install wordcloud\n",
        "!pip install transformers gradio\n",
        "!pip install python-docx\n",
        "!pip install optuna\n",
        "!pip install optuna-integration"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "w8gXRlxho743"
      },
      "source": [
        "## Imports and Libraries"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "g2bv3GPpHA7R",
        "outputId": "6e9d4161-8007-46a1-fbc0-69d928536f3a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Package stopwords is already up-to-date!\n"
          ]
        }
      ],
      "source": [
        "# Google Colab specific imports\n",
        "from google.colab import files\n",
        "from google.colab import drive\n",
        "\n",
        "# Data processing and model training\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import confusion_matrix, classification_report\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# Transformer models and tokenizers\n",
        "from transformers import (\n",
        "    BertTokenizer, BertForSequenceClassification,\n",
        "    RobertaTokenizer, RobertaForSequenceClassification,\n",
        "    DistilBertTokenizer, DistilBertForSequenceClassification,\n",
        "    GPT2Tokenizer, GPT2ForSequenceClassification,\n",
        "    BartTokenizer, BartForSequenceClassification,\n",
        "    T5Tokenizer, T5ForConditionalGeneration\n",
        ")\n",
        "from transformers import GenerationConfig\n",
        "\n",
        "# PyTorch libraries\n",
        "import torch\n",
        "from torch.utils.data import DataLoader, Dataset\n",
        "import torch.optim as optim\n",
        "\n",
        "# Additional libraries\n",
        "from tqdm import tqdm\n",
        "import gradio as gr\n",
        "import docx\n",
        "from collections import Counter\n",
        "import re\n",
        "from wordcloud import WordCloud\n",
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "nltk.download('stopwords')\n",
        "stop_words = set(stopwords.words('english'))\n",
        "import optuna"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cmB89dhvHA7T"
      },
      "source": [
        "## File Upload and Data Loading"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 108
        },
        "id": "ltqC2ugCHA7V",
        "outputId": "88bed92e-5929-4fa8-c611-c742ab4bb54f"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-15b18e6a-8ceb-44a7-852c-c7f9de86e19b\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-15b18e6a-8ceb-44a7-852c-c7f9de86e19b\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving Sentiment_Test.csv to Sentiment_Test (1).csv\n",
            "Saving Sentiment_Training.csv to Sentiment_Training (1).csv\n"
          ]
        }
      ],
      "source": [
        "# Function to upload files in Google Colab\n",
        "def upload_files():\n",
        "    uploaded = files.upload()\n",
        "    return uploaded\n",
        "\n",
        "# Uploading the CSV files\n",
        "uploaded = upload_files()\n",
        "\n",
        "# Loading the CSV files into pandas DataFrames\n",
        "train_data = pd.read_csv('Sentiment_Training.csv', delimiter=';')\n",
        "test_data = pd.read_csv('Sentiment_Test.csv', delimiter=';')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jjuNkQxNHA7c"
      },
      "source": [
        "## Data Exploration and Visualization"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "iuHj9kHCHA7d",
        "outputId": "3b3f1f8a-f66c-41e4-e0e8-bf6721cbc240"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First few rows of the training dataset:\n",
            "   label                                               text\n",
            "0      4  I stalk this truck.  I've been to industrial p...\n",
            "1      2  who really knows if this is good pho or not, i...\n",
            "2      4  I LOVE Bloom Salon... all of their stylist are...\n",
            "3      0  We were excited to eat here, it is difficult t...\n",
            "4      2  So this is a place, with food. That much canno...\n",
            "\n",
            "Information about the training dataset:\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 10000 entries, 0 to 9999\n",
            "Data columns (total 2 columns):\n",
            " #   Column  Non-Null Count  Dtype \n",
            "---  ------  --------------  ----- \n",
            " 0   label   10000 non-null  int64 \n",
            " 1   text    10000 non-null  object\n",
            "dtypes: int64(1), object(1)\n",
            "memory usage: 156.4+ KB\n",
            "None\n",
            "\n",
            "Statistics of text lengths in the training dataset:\n",
            "count    10000.000000\n",
            "mean       729.239800\n",
            "std        653.262897\n",
            "min          2.000000\n",
            "25%        283.000000\n",
            "50%        544.000000\n",
            "75%        968.000000\n",
            "max       5015.000000\n",
            "Name: text_length, dtype: float64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Distribution of labels in the training dataset:\n",
            "label\n",
            "0    2035\n",
            "1    1977\n",
            "2    1943\n",
            "3    1991\n",
            "4    2054\n",
            "Name: count, dtype: int64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Text lengths by label:\n",
            "        count        mean         std   min     25%    50%      75%     max\n",
            "label                                                                      \n",
            "0      2035.0  815.115971  747.139814   2.0  302.50  579.0  1091.00  5015.0\n",
            "1      1977.0  809.385432  704.992632  21.0  320.00  602.0  1075.00  5014.0\n",
            "2      1943.0  763.033968  642.396337   7.0  322.50  597.0  1008.50  5011.0\n",
            "3      1991.0  675.672526  560.609923  10.0  273.00  534.0   913.00  5003.0\n",
            "4      2054.0  586.973223  560.745037   8.0  217.25  417.5   752.75  5009.0\n"
          ]
        }
      ],
      "source": [
        "# Display the first few rows and information of the training dataset\n",
        "print(\"First few rows of the training dataset:\")\n",
        "print(train_data.head())\n",
        "\n",
        "print(\"\\nInformation about the training dataset:\")\n",
        "print(train_data.info())\n",
        "\n",
        "# Calculate text length\n",
        "train_data['text_length'] = train_data['text'].apply(len)\n",
        "print(\"\\nStatistics of text lengths in the training dataset:\")\n",
        "print(train_data['text_length'].describe())\n",
        "\n",
        "# Histogram of text lengths\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.hist(train_data['text_length'], bins=50, edgecolor='black')\n",
        "plt.title('Distribution of Text Lengths')\n",
        "plt.xlabel('Text Length')\n",
        "plt.ylabel('Frequency')\n",
        "plt.grid(axis='y')\n",
        "plt.show()\n",
        "\n",
        "# Distribution of labels\n",
        "print(\"\\nDistribution of labels in the training dataset:\")\n",
        "print(train_data['label'].value_counts().sort_index())\n",
        "\n",
        "# Plot of label distribution\n",
        "label_distribution = train_data['label'].value_counts().sort_index()\n",
        "plt.figure(figsize=(10, 6))\n",
        "label_distribution.plot(kind='bar')\n",
        "plt.title('Distribution of Labels')\n",
        "plt.xlabel('Label')\n",
        "plt.ylabel('Count')\n",
        "plt.xticks(rotation=0)\n",
        "plt.grid(axis='y')\n",
        "plt.show()\n",
        "\n",
        "# Function to clean and tokenize text\n",
        "def tokenize(text):\n",
        "    text = text.lower()\n",
        "    text = re.sub(r'[^a-z\\s]', '', text)\n",
        "    tokens = text.split()\n",
        "    tokens = [word for word in tokens if word not in stop_words]\n",
        "    return tokens\n",
        "\n",
        "# Tokenize all words\n",
        "all_words = train_data['text'].apply(tokenize).sum()\n",
        "\n",
        "# Find most common words\n",
        "word_counts = Counter(all_words)\n",
        "common_words = word_counts.most_common(20)\n",
        "\n",
        "# Generate WordCloud\n",
        "wordcloud = WordCloud(width=800, height=400, background_color='white').generate_from_frequencies(word_counts)\n",
        "\n",
        "# Plot WordCloud\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.imshow(wordcloud, interpolation='bilinear')\n",
        "plt.axis('off')\n",
        "plt.title('Most Common Words in Texts')\n",
        "plt.show()\n",
        "\n",
        "# Text lengths grouped by label and described\n",
        "text_length_by_label = train_data.groupby('label')['text_length'].describe()\n",
        "\n",
        "# Boxplot of text lengths by label\n",
        "plt.figure(figsize=(10, 6))\n",
        "train_data.boxplot(column='text_length', by='label', grid=False)\n",
        "plt.title('Text Lengths by Label')\n",
        "plt.suptitle('')\n",
        "plt.xlabel('Label')\n",
        "plt.ylabel('Text Length')\n",
        "plt.show()\n",
        "\n",
        "# Output text lengths by label\n",
        "print(\"\\nText lengths by label:\")\n",
        "print(text_length_by_label)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UwdMe9geHA7t"
      },
      "source": [
        "## Creating a Slang Dictionary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 128
        },
        "id": "7-3OV9ILHA7x",
        "outputId": "f1859582-a8d1-49d4-8714-facf81ccd008"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-091aaded-696d-4d27-8c66-5e592e7e2976\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-091aaded-696d-4d27-8c66-5e592e7e2976\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving abbreviations.docx to abbreviations (1).docx\n",
            "Slang Dictionary: {'u': 'you', 'ur': 'your', 'r': 'are', 'idk': 'i don’t know', 'btw': 'by the way', 'omg': 'oh my god', 'lol': 'laugh out loud', 'brb': 'be right back', 'gtg': 'got to go', 'smh': 'shaking my head', 'tbh': 'to be honest', 'wth': 'what the heck', 'rofl': 'rolling on the floor laughing', 'stfu': 'shut the fuck up', 'icymi': 'in case you missed it', 'tl;dr': 'too long, didn’t read', 'tmi': 'too much information', 'afaik': 'as far as i know', 'lmk': 'let me know', 'nvm': 'nevermind', 'ftw': 'for the win', 'byob': 'bring your own beer', 'bogo': 'buy one get one', 'jk': 'just kidding', 'jw': 'just wondering', 'tgif': 'thank goodness it’s friday', 'tbf': 'to be frank', 'rn': 'right now', 'fubar': 'fucking up beyond all recognition', 'iso': 'in search of', 'brt': 'be right there', 'ftfy': 'fixed that for you', 'gg': 'good game', 'bfd': 'big freaking deal', 'irl': 'in real life', 'dae': 'does anyone else?', 'ngl': 'not gonna lie', 'bts': 'behind the scenes', 'ikr': 'i know right', 'ttyl': 'talk to you later', 'hmu': 'hit me up', 'fwiw': 'for what it’s worth', 'imo': 'in my opinion', 'wyd': 'what are you doing?', 'imho': 'in my humble opinion', 'idc': 'i don’t care', 'idgaf': 'i don’t give a fuck', 'nbd': 'no big deal', 'tba': 'to be announced', 'tbd': 'to be decided', 'afk': 'away from keyboard', 'abt': 'about', 'iykyk': 'if you know you know', 'b4': 'before', 'bc': 'because', 'jic': 'just in case', 'fomo': 'fear of missing out', 'snafu': 'situation normal, all fucking up', 'gtg/g2g': 'got to go', 'h8': 'hate', 'lmao': 'laughing my ass off', 'iykwim': 'if you know what i mean', 'myob': 'mind your own business', 'pov': 'point of view', 'tlc': 'tender loving care', 'hbd': 'happy birthday', 'w/e': 'whatever', 'wtf': 'what the fuck', 'wysiwyg': 'what you see is what you get', 'fwif': 'for what it’s worth', 'tw': 'trigger warning', 'eod': 'end of day', 'faq': 'frequently asked question', 'aka': 'also known as', 'asap': 'as soon as possible', 'diy': 'do it yourself', 'lmgtfy': 'let me google that for you', 'np': 'no problem', 'n/a': 'not applicable', 'ooo': 'out of office', 'tia': 'thanks in advance', 'cob': 'close of business', 'fyi': 'for your information', 'nsfw': 'not safe for work', 'wfh': 'work from home', 'omw': 'on my way', 'wdyt': 'what do you think?', 'wygam': 'when you get a minute', 'smp': 'social media platform', 'dm': 'direct message', 'fb': 'facebook', 'ig': 'instagram', 'li': 'linkedin', 'yt': 'youtube', 'sc': 'snapchat', 'br': 'bereal', 'x': 'previously named twitter', 'wa': 'whatsapp', 'tt': 'tiktok', 'ff': 'follow friday', 'im': 'instant message', 'pm': 'private message', 'op': 'original post', 'qotd': 'quote of the day', 'ootd': 'outfit of the day', 'rt': 'retweet', 'tbt': 'throwback thursday', 'til': 'today i learned', 'ama': 'ask me anything', 'eli5': 'explain like i’m 5', 'fbf': 'flashback friday', 'mfw': 'my feeling when', 'grwm': 'get ready with me', 'ily': 'i love you', 'mcm': 'man crush monday', 'wcw': 'woman crush wednesday', 'bf': 'boyfriend', 'gf': 'girlfriend', 'bae': 'before anyone else', 'lysm': 'love you so much', 'pda': 'public display of affection', 'ltr': 'longterm relationship', 'dtr': 'define the relationship', 'ldr': 'long-distance relationship', 'xoxo': 'hugs and kisses', 'otp': 'one true pairing', 'loml': 'love of my life', 'cta': 'call to action', 'ugc': 'user-generated content', 'ux': 'user experience', 'sms': 'short message service', 'mms': 'multimedia messaging service', 'rcs': 'rich communication services', 'roi': 'return on investment', 'ctr': 'click-through rate', 'cpc': 'cost per click', 'cr': 'conversion rate', 'smb': 'small/medium business', 'tos': 'terms of service', 'scn': 'short code number', '5g': '5th generation, meaning the newest generation of mobile communications', 'tcpa': 'telephone consumer protection act', 'text broadcast': 'a single message sent to a large group of people', 'text to join': 'a method people can use to opt into your text list', 'text to win': 'a contest you run through text message', 'text to landline': 'when you send or receive text messages on a landline phone'}\n"
          ]
        }
      ],
      "source": [
        "# Function to read the Word document and create a slang dictionary\n",
        "def read_slang_dict_from_docx(docx_file):\n",
        "    doc = docx.Document(docx_file)\n",
        "    slang_dict = {}\n",
        "    for para in doc.paragraphs:\n",
        "        if ':' in para.text:\n",
        "            key, value = para.text.split(':', 1)\n",
        "            slang_dict[key.strip().lower()] = value.strip().lower()\n",
        "    return slang_dict\n",
        "\n",
        "# Upload and read the Word document\n",
        "uploaded = upload_files()\n",
        "docx_file = next(iter(uploaded))\n",
        "slang_dict = read_slang_dict_from_docx(docx_file)\n",
        "print(\"Slang Dictionary:\", slang_dict)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Finding and Counting Slang Words in Text Data"
      ],
      "metadata": {
        "id": "8AgNiE7YT7A6"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8O48FXGcHA7z",
        "outputId": "740944b3-db34-43b8-9b30-d9ca0a0d98b8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Counter({'u': 148, 'lol': 143, 'pm': 122, 'im': 102, 'bf': 86, 'r': 76, 'omg': 65, 'wtf': 54, 'gf': 44, 'bc': 33, 'btw': 25, 'np': 23, 'x': 23, 'fyi': 22, 'til': 21, 'cr': 21, 'aka': 20, 'imo': 19, 'ur': 17, 'asap': 15, 'br': 15, 'wth': 15, 'op': 10, 'smh': 9, 'imho': 8, 'cob': 8, 'abt': 7, 'idk': 7, 'byob': 7, 'diy': 7, 'tgif': 5, 'bogo': 5, 'lmao': 3, 'ff': 3, 'tia': 3, 'jk': 3, 'ftw': 3, 'sc': 2, 'wa': 2, 'li': 2, 'bfd': 2, 'tlc': 2, 'fb': 2, 'snafu': 2, 'pov': 1, 'n/a': 1, 'idgaf': 1, 'pda': 1, 'rt': 1, 'mms': 1, 'tt': 1, 'stfu': 1, 'sms': 1, 'tos': 1, 'tmi': 1, 'w/e': 1, 'tw': 1, 'jw': 1, 'ama': 1})\n"
          ]
        }
      ],
      "source": [
        "# Function to find and count slang words in the text data\n",
        "def find_slang_words(df, slang_dict):\n",
        "    slang_words_found = []\n",
        "\n",
        "    # Using regular expressions to find slang words\n",
        "    slang_pattern = re.compile(r'\\b(' + '|'.join(re.escape(word) for word in slang_dict.keys()) + r')\\b', re.IGNORECASE)\n",
        "\n",
        "    for text in df['text']:\n",
        "        found_words = slang_pattern.findall(text)\n",
        "        slang_words_found.extend(word.lower() for word in found_words)\n",
        "\n",
        "    return Counter(slang_words_found)\n",
        "\n",
        "# Find slang words in the training dataset\n",
        "slang_words_counter = find_slang_words(train_data, slang_dict)\n",
        "\n",
        "# Display slang words and their frequencies\n",
        "print(slang_words_counter)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W847D5kPHA72"
      },
      "source": [
        "## Text Preprocessing and Sentiment Categorization"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "60fJ22ZEHA72",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "40de75b9-9d27-409d-cf13-79954b1df165"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "First few rows of the processed training dataset:\n",
            "                                                text  \\\n",
            "0  I stalk this truck.  I've been to industrial p...   \n",
            "1  who really knows if this is good pho or not, i...   \n",
            "2  I LOVE Bloom Salon... all of their stylist are...   \n",
            "3  We were excited to eat here, it is difficult t...   \n",
            "4  So this is a place, with food. That much canno...   \n",
            "\n",
            "                                      processed_text  \n",
            "0  I stalk this truck. I've been to industrial pa...  \n",
            "1  who really knows if this is good pho or not, i...  \n",
            "2  I LOVE Bloom Salon... all of their stylist are...  \n",
            "3  We were excited to eat here, it is difficult t...  \n",
            "4  So this is a place, with food. That much canno...  \n",
            "\n",
            "Distribution of sentiment categories in the training dataset:\n",
            "sentiment\n",
            "negative    4012\n",
            "neutral     1943\n",
            "positive    4045\n",
            "Name: count, dtype: int64\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Text lengths by label:\n",
            "        count        mean         std   min     25%    50%      75%     max\n",
            "label                                                                      \n",
            "0      2035.0  815.115971  747.139814   2.0  302.50  579.0  1091.00  5015.0\n",
            "1      1977.0  809.385432  704.992632  21.0  320.00  602.0  1075.00  5014.0\n",
            "2      1943.0  763.033968  642.396337   7.0  322.50  597.0  1008.50  5011.0\n",
            "3      1991.0  675.672526  560.609923  10.0  273.00  534.0   913.00  5003.0\n",
            "4      2054.0  586.973223  560.745037   8.0  217.25  417.5   752.75  5009.0\n"
          ]
        }
      ],
      "source": [
        "# Function to preprocess text by replacing slang words with their standard equivalents\n",
        "def preprocess_text(text, slang_dict):\n",
        "    text = re.sub(r'\\s+', ' ', text).strip()\n",
        "    words = text.split()\n",
        "    new_words = [slang_dict.get(word.lower(), word) for word in words]\n",
        "    text = ' '.join(new_words)\n",
        "    return text\n",
        "\n",
        "# Apply the preprocessing function to the training dataset\n",
        "train_data['processed_text'] = train_data['text'].apply(lambda x: preprocess_text(x, slang_dict))\n",
        "\n",
        "# Apply the preprocessing function to the test dataset\n",
        "test_data['processed_text'] = test_data['text'].apply(lambda x: preprocess_text(x, slang_dict))\n",
        "\n",
        "# Display the first few rows of the processed training dataset\n",
        "print(\"First few rows of the processed training dataset:\")\n",
        "print(train_data[['text', 'processed_text']].head())\n",
        "\n",
        "# Function to categorize sentiment ratings\n",
        "def categorize_rating(rating):\n",
        "    if rating <= 1:\n",
        "        return 'negative'\n",
        "    elif rating == 2:\n",
        "        return 'neutral'\n",
        "    else:\n",
        "        return 'positive'\n",
        "\n",
        "# Apply the categorization function to the training and test datasets\n",
        "train_data['sentiment'] = train_data['label'].apply(categorize_rating)\n",
        "test_data['sentiment'] = test_data['label'].apply(categorize_rating)\n",
        "\n",
        "# Distribution of sentiment categories in the training dataset\n",
        "print(\"\\nDistribution of sentiment categories in the training dataset:\")\n",
        "print(train_data['sentiment'].value_counts().sort_index())\n",
        "\n",
        "# Plot the distribution of sentiment categories\n",
        "category_distribution = train_data['sentiment'].value_counts().sort_index()\n",
        "plt.figure(figsize=(10, 6))\n",
        "category_distribution.plot(kind='bar')\n",
        "plt.title('Distribution of Sentiment Categories in the Training Dataset')\n",
        "plt.xlabel('Category')\n",
        "plt.ylabel('Count')\n",
        "plt.xticks(rotation=0)\n",
        "plt.grid(axis='y')\n",
        "plt.show()\n",
        "\n",
        "# Output text lengths by label\n",
        "text_length_by_label = train_data.groupby('label')['text_length'].describe()\n",
        "print(\"\\nText lengths by label:\")\n",
        "print(text_length_by_label)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Splitting Training Data into Training and Validation Sets"
      ],
      "metadata": {
        "id": "SFb33CFEU2ZS"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "SRIEY1GaHA8A"
      },
      "outputs": [],
      "source": [
        "# Split training data into training and validation datasets\n",
        "train_data, val_data = train_test_split(train_data, test_size=0.2, stratify=train_data['sentiment'], random_state=42)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-3DiCD_dHA8E"
      },
      "source": [
        "## Dataset und Tokenisierung"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "gBGb2LgyHA8G"
      },
      "outputs": [],
      "source": [
        "# Define the Dataset class\n",
        "class YelpDataset(Dataset):\n",
        "    \"\"\"\n",
        "    A custom dataset class for handling Yelp review data by encoding the text data\n",
        "    and associated labels for use in a PyTorch DataLoader.\n",
        "\n",
        "    Attributes:\n",
        "    encodings (dict): A dictionary containing the encoded text data.\n",
        "    labels (torch.Tensor): A tensor containing the labels for the text data.\n",
        "    \"\"\"\n",
        "    def __init__(self, encodings, labels):\n",
        "        \"\"\"\n",
        "        Initializes the dataset with encoded texts and labels.\n",
        "\n",
        "        Parameters:\n",
        "        encodings (dict): The encoded text data.\n",
        "        labels (torch.Tensor): The labels for the text data.\n",
        "        \"\"\"\n",
        "        self.encodings = encodings\n",
        "        self.labels = labels.clone().detach().requires_grad_(False)\n",
        "\n",
        "    def __getitem__(self, idx):\n",
        "        \"\"\"\n",
        "        Returns a dictionary containing the encoded text data and the corresponding label for a given index.\n",
        "\n",
        "        Parameters:\n",
        "        idx (int): The index of the data item.\n",
        "\n",
        "        Returns:\n",
        "        dict: A dictionary with keys 'input_ids', 'attention_mask', and 'labels'.\n",
        "        \"\"\"\n",
        "        item = {key: val[idx] for key, val in self.encodings.items()}\n",
        "        item['labels'] = self.labels[idx]\n",
        "        return item\n",
        "\n",
        "    def __len__(self):\n",
        "        \"\"\"\n",
        "        Returns the length of the dataset.\n",
        "\n",
        "        Returns:\n",
        "        int: The number of items in the dataset.\n",
        "        \"\"\"\n",
        "        return len(self.labels)\n",
        "\n",
        "# Function to tokenize the data\n",
        "def tokenize_data(data, tokenizer, slang_dict, model_name=None, max_length=18):\n",
        "    \"\"\"\n",
        "    Preprocesses and tokenizes the text data, converting it into a format suitable for input into transformer models.\n",
        "\n",
        "    Parameters:\n",
        "    data (pd.DataFrame): The dataset to be tokenized.\n",
        "    tokenizer (PreTrainedTokenizer): The tokenizer associated with the transformer model.\n",
        "    slang_dict (dict): The dictionary of slang words and their standard equivalents.\n",
        "    model_name (str, optional): Optional parameter to specify the model (e.g., 'T5') for special handling.\n",
        "    max_length (int, optional): The maximum length for tokenized sequences. Defaults to 10.\n",
        "\n",
        "    Returns:\n",
        "    tuple: A tuple containing tokenized inputs and labels or target inputs.\n",
        "    \"\"\"\n",
        "    # Preprocessing the texts\n",
        "    texts = [preprocess_text(text, slang_dict) for text in data['text'].tolist()]\n",
        "    labels = pd.Categorical(data['sentiment']).codes\n",
        "\n",
        "    if model_name == 'T5':\n",
        "        inputs = tokenizer(texts, padding='max_length', truncation=True, max_length=max_length, return_tensors=\"pt\")\n",
        "        targets = [\"positive\" if label == 2 else \"neutral\" if label == 1 else \"negative\" for label in labels]\n",
        "        target_inputs = tokenizer(targets, padding='max_length', truncation=True, max_length=max_length, return_tensors=\"pt\")\n",
        "        return inputs, target_inputs.input_ids\n",
        "    else:\n",
        "        inputs = tokenizer(texts, padding='max_length', truncation=True, max_length=max_length, return_tensors=\"pt\")\n",
        "        return inputs, torch.tensor(labels, dtype=torch.long)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "V6cV_ffuHA8N"
      },
      "source": [
        "## Defining Tokenizers and Models"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mt7D3s1oHA8O",
        "outputId": "0deaaab2-53d1-4385-b781-94821008b66d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:89: UserWarning: \n",
            "The secret `HF_TOKEN` does not exist in your Colab secrets.\n",
            "To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n",
            "You will be able to reuse this secret in all of your notebooks.\n",
            "Please note that authentication is recommended but still optional to access public models or datasets.\n",
            "  warnings.warn(\n",
            "Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at roberta-base and are newly initialized: ['classifier.dense.bias', 'classifier.dense.weight', 'classifier.out_proj.bias', 'classifier.out_proj.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "Some weights of GPT2ForSequenceClassification were not initialized from the model checkpoint at gpt2 and are newly initialized: ['score.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "Some weights of BartForSequenceClassification were not initialized from the model checkpoint at facebook/bart-base and are newly initialized: ['classification_head.dense.bias', 'classification_head.dense.weight', 'classification_head.out_proj.bias', 'classification_head.out_proj.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n",
            "You are using the default legacy behaviour of the <class 'transformers.models.t5.tokenization_t5.T5Tokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565\n",
            "Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"
          ]
        }
      ],
      "source": [
        "# Define tokenizers and models\n",
        "model_configs = {\n",
        "    'BERT': {\n",
        "        'tokenizer': BertTokenizer.from_pretrained('bert-base-uncased'),\n",
        "        'model': BertForSequenceClassification.from_pretrained('bert-base-uncased', num_labels=3)\n",
        "    },\n",
        "    'RoBERTa': {\n",
        "        'tokenizer': RobertaTokenizer.from_pretrained('roberta-base'),\n",
        "        'model': RobertaForSequenceClassification.from_pretrained('roberta-base', num_labels=3)\n",
        "    },\n",
        "    'DistilBERT': {\n",
        "        'tokenizer': DistilBertTokenizer.from_pretrained('distilbert-base-uncased'),\n",
        "        'model': DistilBertForSequenceClassification.from_pretrained('distilbert-base-uncased', num_labels=3)\n",
        "    },\n",
        "    'GPT-2': {\n",
        "        'tokenizer': GPT2Tokenizer.from_pretrained('gpt2'),\n",
        "        'model': GPT2ForSequenceClassification.from_pretrained('gpt2', num_labels=3)\n",
        "    },\n",
        "    'BART': {\n",
        "        'tokenizer': BartTokenizer.from_pretrained('facebook/bart-base'),\n",
        "        'model': BartForSequenceClassification.from_pretrained('facebook/bart-base', num_labels=3)\n",
        "    },\n",
        "    'T5': {\n",
        "        'tokenizer': T5Tokenizer.from_pretrained('t5-base'),\n",
        "        'model': T5ForConditionalGeneration.from_pretrained('t5-base')\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Ensuring Tokenizer Compatibility"
      ],
      "metadata": {
        "id": "q0b58t0vV7Lc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Ensures that all tokenizers have a pad_token and are compatible with their respective models\n",
        "for model_name, config in model_configs.items():\n",
        "    tokenizer = config['tokenizer']\n",
        "    model = config['model']\n",
        "\n",
        "    # Add a pad token if it doesn't exist\n",
        "    if tokenizer.pad_token is None:\n",
        "        tokenizer.add_special_tokens({'pad_token': tokenizer.eos_token})\n",
        "        model.resize_token_embeddings(len(tokenizer))\n",
        "\n",
        "    # Set the required pad_token_id for models\n",
        "    model.config.pad_token_id = tokenizer.pad_token_id\n",
        "    assert tokenizer.pad_token is not None, f\"Pad token not added for {model_name}\""
      ],
      "metadata": {
        "id": "3yH0m7BNWA6x"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Defining the Optimizer"
      ],
      "metadata": {
        "id": "ZCBMMroFWD0V"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define optimizer\n",
        "def get_optimizer(model):\n",
        "    \"\"\"\n",
        "    Returns an AdamW optimizer for the given model with a learning rate of 5e-5.\n",
        "\n",
        "    Parameters:\n",
        "    model (nn.Module): The model to optimize.\n",
        "\n",
        "    Returns:\n",
        "    optim.AdamW: The AdamW optimizer.\n",
        "    \"\"\"\n",
        "    return optim.AdamW(model.parameters(), lr=5e-5)"
      ],
      "metadata": {
        "id": "VxE924VmWGvB"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EyWGoaMYHA8P"
      },
      "source": [
        "## Training and Evaluation Loops with Class Weights"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the train function\n",
        "def train(model, dataloader, optimizer, device, class_weights, model_name):\n",
        "    model.train()\n",
        "    total_loss = 0\n",
        "\n",
        "    criterion = torch.nn.CrossEntropyLoss(weight=class_weights.to(device))\n",
        "\n",
        "    for batch in tqdm(dataloader, desc=f\"Training {model_name}\"):\n",
        "        optimizer.zero_grad()\n",
        "\n",
        "        input_ids = batch['input_ids'].to(device)\n",
        "        attention_mask = batch['attention_mask'].to(device)\n",
        "        labels = batch['labels'].to(device)\n",
        "\n",
        "        outputs = model(input_ids=input_ids, attention_mask=attention_mask)\n",
        "        logits = outputs.logits\n",
        "\n",
        "        loss = criterion(logits, labels)\n",
        "\n",
        "        loss.backward()\n",
        "        optimizer.step()\n",
        "\n",
        "        total_loss += loss.item()\n",
        "\n",
        "    avg_loss = total_loss / len(dataloader)\n",
        "    return avg_loss\n",
        "\n",
        "# Define the evaluate function\n",
        "def evaluate(model, dataloader, device, tokenizer, model_name, class_weights):\n",
        "    model.eval()\n",
        "    total_loss = 0\n",
        "    all_labels = []\n",
        "    all_preds = []\n",
        "\n",
        "    criterion = torch.nn.CrossEntropyLoss(weight=class_weights.to(device))\n",
        "\n",
        "    with torch.no_grad():\n",
        "        for batch in tqdm(dataloader, desc=f\"Evaluating {model_name}\"):\n",
        "            input_ids = batch['input_ids'].to(device)\n",
        "            attention_mask = batch['attention_mask'].to(device)\n",
        "            labels = batch['labels'].to(device)\n",
        "\n",
        "            outputs = model(input_ids=input_ids, attention_mask=attention_mask)\n",
        "            logits = outputs.logits\n",
        "\n",
        "            loss = criterion(logits, labels)\n",
        "            total_loss += loss.item()\n",
        "\n",
        "            preds = torch.argmax(logits, dim=1).cpu().numpy()\n",
        "            all_preds.extend(preds)\n",
        "            all_labels.extend(labels.cpu().numpy())\n",
        "\n",
        "    avg_loss = total_loss / len(dataloader)\n",
        "    accuracy = (np.array(all_preds) == np.array(all_labels)).mean()\n",
        "\n",
        "    return avg_loss, accuracy, all_labels, all_preds\n",
        "\n",
        "# Define the train function for T5\n",
        "def train_t5(model, dataloader, optimizer, device, model_name):\n",
        "    model.train()\n",
        "    total_loss = 0\n",
        "\n",
        "    for batch in tqdm(dataloader, desc=f\"Training {model_name}\"):\n",
        "        optimizer.zero_grad()\n",
        "\n",
        "        input_ids = batch['input_ids'].to(device)\n",
        "        attention_mask = batch['attention_mask'].to(device)\n",
        "        labels = batch['labels'].to(device)\n",
        "\n",
        "        outputs = model(input_ids=input_ids, attention_mask=attention_mask, labels=labels)\n",
        "        loss = outputs.loss\n",
        "\n",
        "        loss.backward()\n",
        "        optimizer.step()\n",
        "\n",
        "        total_loss += loss.item()\n",
        "\n",
        "    avg_loss = total_loss / len(dataloader)\n",
        "    return avg_loss\n",
        "\n",
        "# Define the evaluate function for T5\n",
        "def evaluate_t5(model, dataloader, device, tokenizer, model_name):\n",
        "    model.eval()\n",
        "    total_loss = 0\n",
        "    all_labels = []\n",
        "    all_preds = []\n",
        "\n",
        "    with torch.no_grad():\n",
        "        for batch in tqdm(dataloader, desc=f\"Evaluating {model_name}\"):\n",
        "            input_ids = batch['input_ids'].to(device)\n",
        "            attention_mask = batch['attention_mask'].to(device)\n",
        "            labels = batch['labels'].to(device)\n",
        "\n",
        "            outputs = model(input_ids=input_ids, attention_mask=attention_mask, labels=labels)\n",
        "            loss = outputs.loss\n",
        "            total_loss += loss.item()\n",
        "\n",
        "            # Decoding the predicted sequences and labels\n",
        "            preds = torch.argmax(outputs.logits, dim=2)\n",
        "            decoded_preds = [tokenizer.decode(pred, skip_special_tokens=True) for pred in preds]\n",
        "            decoded_labels = [tokenizer.decode(label, skip_special_tokens=True) for label in labels]\n",
        "\n",
        "            all_preds.extend(decoded_preds)\n",
        "            all_labels.extend(decoded_labels)\n",
        "\n",
        "    avg_loss = total_loss / len(dataloader)\n",
        "    accuracy = np.mean([pred == label for pred, label in zip(all_preds, all_labels)])\n",
        "\n",
        "    return avg_loss, accuracy, all_labels, all_preds\n"
      ],
      "metadata": {
        "id": "abn9HEO7qFgb"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "JIFyXA_XHA91"
      },
      "outputs": [],
      "source": [
        "# Training function\n",
        "def train_model(model_name, model_class, tokenizer_class, num_labels, learning_rate, batch_size, weight_decay, num_epochs, class_weights):\n",
        "    \"\"\"\n",
        "    Trains a model with the given hyperparameters.\n",
        "\n",
        "    Parameters:\n",
        "    model_name (str): Name of the pre-trained model.\n",
        "    model_class (transformers.PreTrainedModel): The model class.\n",
        "    tokenizer_class (transformers.PreTrainedTokenizer): The tokenizer class.\n",
        "    num_labels (int): Number of labels for classification.\n",
        "    learning_rate (float): Learning rate for the optimizer.\n",
        "    batch_size (int): Batch size for training.\n",
        "    weight_decay (float): Weight decay for the optimizer.\n",
        "    num_epochs (int): Number of training epochs.\n",
        "\n",
        "    Returns:\n",
        "    model: The trained model.\n",
        "    dict: Evaluation results including validation loss and accuracy.\n",
        "    \"\"\"\n",
        "    # Initialize tokenizer and model\n",
        "    tokenizer = tokenizer_class.from_pretrained(model_name)\n",
        "    model = model_class.from_pretrained(model_name, num_labels=num_labels)\n",
        "\n",
        "    train_inputs, train_labels = tokenize_data(train_data, tokenizer, slang_dict, model_name)\n",
        "    val_inputs, val_labels = tokenize_data(val_data, tokenizer, slang_dict, model_name)\n",
        "\n",
        "    train_dataset = YelpDataset(train_inputs, train_labels)\n",
        "    val_dataset = YelpDataset(val_inputs, val_labels)\n",
        "\n",
        "    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\n",
        "    val_loader = DataLoader(val_dataset, batch_size=batch_size)\n",
        "\n",
        "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "    model.to(device)\n",
        "\n",
        "    optimizer = optim.AdamW(model.parameters(), lr=learning_rate, weight_decay=weight_decay)\n",
        "\n",
        "    for epoch in range(num_epochs):\n",
        "        print(f\"Training {model_name} - Epoch {epoch + 1}/{num_epochs}\")\n",
        "        if model_name == 'T5':\n",
        "            train_loss = train_t5(model, train_loader, optimizer, device, model_name)\n",
        "            val_loss, val_accuracy, val_labels, val_preds = evaluate_t5(model, val_loader, device, tokenizer, model_name)\n",
        "        else:\n",
        "            train_loss = train(model, train_loader, optimizer, device, class_weights, model_name)\n",
        "            val_loss, val_accuracy, val_labels, val_preds = evaluate(model, val_loader, device, tokenizer, model_name, class_weights)\n",
        "        print(f\"Train Loss: {train_loss:.4f}, Val Loss: {val_loss:.4f}, Val Accuracy: {val_accuracy:.4f}\")\n",
        "\n",
        "    return model, {\"eval_loss\": val_loss, \"eval_accuracy\": val_accuracy}"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Ensure id2label mapping\n",
        "id2label = {0: 'negative', 1: 'neutral', 2: 'positive'}\n",
        "\n",
        "# Funktion zur Erstellung einer GenerationConfig für T5\n",
        "def create_generation_config():\n",
        "    return GenerationConfig(\n",
        "        early_stopping=True,\n",
        "        num_beams=4,\n",
        "        no_repeat_ngram_size=3,\n",
        "        forced_bos_token_id=0,\n",
        "        forced_eos_token_id=2\n",
        "    )\n",
        "\n",
        "# Function for making predictions with all models\n",
        "def classify_text(text):\n",
        "    print(f\"Classifying text: {text}\")\n",
        "    predictions = {}\n",
        "\n",
        "    for model_name, model_info in loaded_models.items():\n",
        "        tokenizer = model_info['tokenizer']\n",
        "        model = model_info['model']\n",
        "        inputs = tokenizer(text, return_tensors='pt', truncation=True, padding=True, max_length=128).to(device)\n",
        "\n",
        "        model.to(device)\n",
        "        model.eval()\n",
        "        with torch.no_grad():\n",
        "            if model_name == 'T5':\n",
        "                generation_config = create_generation_config()\n",
        "                outputs = model.generate(input_ids=inputs['input_ids'], attention_mask=inputs['attention_mask'], generation_config=generation_config)\n",
        "                prediction = tokenizer.decode(outputs[0], skip_special_tokens=True)\n",
        "                if prediction in [\"positive\", \"neutral\", \"negative\"]:\n",
        "                    predictions[model_name] = prediction\n",
        "                else:\n",
        "                    predictions[model_name] = \"unknown\"\n",
        "            else:\n",
        "                outputs = model(**inputs)\n",
        "                prediction = torch.argmax(outputs.logits, dim=1).item()\n",
        "                predictions[model_name] = id2label[prediction]\n",
        "\n",
        "    return predictions"
      ],
      "metadata": {
        "id": "KR0hu_Xl4nxd"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AKi7TFnuHA93"
      },
      "source": [
        "## Model Training and Evaluation with Class Weights"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "AnuCkwEEHA94",
        "outputId": "58728065-b177-48c8-9404-18740676c02e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training BERT - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training BERT: 100%|██████████| 500/500 [00:33<00:00, 14.98it/s]\n",
            "Evaluating BERT: 100%|██████████| 125/125 [00:01<00:00, 109.38it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.7557, Val Loss: 0.8810, Val Accuracy: 0.5575\n",
            "\n",
            "Confusion Matrix for BERT:\n",
            "[[362 347  93]\n",
            " [ 41 274  74]\n",
            " [ 38 292 479]]\n",
            "\n",
            "Classification Report for BERT:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.82      0.45      0.58       802\n",
            "     neutral       0.30      0.70      0.42       389\n",
            "    positive       0.74      0.59      0.66       809\n",
            "\n",
            "    accuracy                           0.56      2000\n",
            "   macro avg       0.62      0.58      0.55      2000\n",
            "weighted avg       0.69      0.56      0.58      2000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training RoBERTa - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training RoBERTa: 100%|██████████| 500/500 [00:38<00:00, 13.02it/s]\n",
            "Evaluating RoBERTa: 100%|██████████| 125/125 [00:01<00:00, 88.18it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9824, Val Loss: 0.9833, Val Accuracy: 0.5845\n",
            "\n",
            "Confusion Matrix for RoBERTa:\n",
            "[[420  37 345]\n",
            " [ 85  41 263]\n",
            " [ 88  13 708]]\n",
            "\n",
            "Classification Report for RoBERTa:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.71      0.52      0.60       802\n",
            "     neutral       0.45      0.11      0.17       389\n",
            "    positive       0.54      0.88      0.67       809\n",
            "\n",
            "    accuracy                           0.58      2000\n",
            "   macro avg       0.57      0.50      0.48      2000\n",
            "weighted avg       0.59      0.58      0.54      2000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training DistilBERT - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training DistilBERT: 100%|██████████| 500/500 [00:21<00:00, 23.51it/s]\n",
            "Evaluating DistilBERT: 100%|██████████| 125/125 [00:00<00:00, 152.63it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9444, Val Loss: 0.8733, Val Accuracy: 0.5930\n",
            "\n",
            "Confusion Matrix for DistilBERT:\n",
            "[[447 227 128]\n",
            " [ 69 209 111]\n",
            " [113 166 530]]\n",
            "\n",
            "Classification Report for DistilBERT:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.71      0.56      0.62       802\n",
            "     neutral       0.35      0.54      0.42       389\n",
            "    positive       0.69      0.66      0.67       809\n",
            "\n",
            "    accuracy                           0.59      2000\n",
            "   macro avg       0.58      0.58      0.57      2000\n",
            "weighted avg       0.63      0.59      0.60      2000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training GPT-2 - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training GPT-2: 100%|██████████| 500/500 [00:39<00:00, 12.79it/s]\n",
            "Evaluating GPT-2: 100%|██████████| 125/125 [00:01<00:00, 80.56it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 1.1219, Val Loss: 0.8921, Val Accuracy: 0.5780\n",
            "\n",
            "Confusion Matrix for GPT-2:\n",
            "[[448 251 103]\n",
            " [ 78 219  92]\n",
            " [118 202 489]]\n",
            "\n",
            "Classification Report for GPT-2:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.70      0.56      0.62       802\n",
            "     neutral       0.33      0.56      0.41       389\n",
            "    positive       0.71      0.60      0.66       809\n",
            "\n",
            "    accuracy                           0.58      2000\n",
            "   macro avg       0.58      0.58      0.56      2000\n",
            "weighted avg       0.63      0.58      0.59      2000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training BART - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training BART: 100%|██████████| 500/500 [00:44<00:00, 11.28it/s]\n",
            "Evaluating BART: 100%|██████████| 125/125 [00:01<00:00, 84.76it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9803, Val Loss: 0.8700, Val Accuracy: 0.5865\n",
            "\n",
            "Confusion Matrix for BART:\n",
            "[[483 251  68]\n",
            " [ 91 222  76]\n",
            " [ 95 246 468]]\n",
            "\n",
            "Classification Report for BART:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.72      0.60      0.66       802\n",
            "     neutral       0.31      0.57      0.40       389\n",
            "    positive       0.76      0.58      0.66       809\n",
            "\n",
            "    accuracy                           0.59      2000\n",
            "   macro avg       0.60      0.58      0.57      2000\n",
            "weighted avg       0.66      0.59      0.61      2000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxQAAAK9CAYAAAC95yoDAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABgUUlEQVR4nO3de3zP9f//8ft7s71tY5thmzmfWY4hLeWQZTFFqFQYkWgqJmklRJmkSI6VD3JIpaikNKdJllOGkJBj7IBsDMP2/v3h5/19v3Pa6xV7b7pdP5fX5bK9Xs/36/V4v9Fnj92fz9fLYrPZbAIAAAAAE9xcXQAAAACAgouGAgAAAIBpNBQAAAAATKOhAAAAAGAaDQUAAAAA02goAAAAAJhGQwEAAADANBoKAAAAAKbRUAAAAAAwjYYCgEvt3r1brVq1kp+fnywWixYtWnRTz79//35ZLBbNnDnzpp63IGvevLmaN29+0853+vRp9erVS8HBwbJYLOrfv/9NOzcAIP+joQCgvXv36tlnn1WlSpVUuHBh+fr6qkmTJnr//fd19uzZW3rtqKgobdu2TW+99ZZmz56thg0b3tLr5aXu3bvLYrHI19f3qp/j7t27ZbFYZLFYNHbsWMPnP3LkiIYPH66kpKSbUK15o0aN0syZM9W3b1/Nnj1bXbt2vaXXq1Chgv1zs1gsKly4sKpWrapBgwbpxIkT13zdyy+/LIvFoscff/yqxy83n5c3Nzc3BQQEqHXr1kpMTJQkzZw502nMtbYKFSrcircOAPlSIVcXAMC1vvvuOz366KOyWq3q1q2batWqpfPnz2vNmjUaNGiQtm/frg8//PCWXPvs2bNKTEzUa6+9pn79+t2Sa5QvX15nz56Vh4fHLTn/jRQqVEhnzpzRt99+q8cee8zp2Ny5c1W4cGGdO3fO1LmPHDmiN954QxUqVFC9evVy/boff/zR1PWuZcWKFbr77rs1bNiwm3re66lXr54GDhwoSTp37pw2bdqk8ePHKyEhQevXr79ivM1m06effqoKFSro22+/1alTp1S0aNGrnvuJJ55QmzZtlJ2drT/++EOTJ09WixYttGHDBjVt2lSzZ892Gt+rVy/ddddd6t27t31fkSJFbuK7BYD8jYYC+A/bt2+fOnfurPLly2vFihUqVaqU/Vh0dLT27Nmj77777pZdPy0tTZLk7+9/y65x+TfYrmK1WtWkSRN9+umnVzQU8+bNU2RkpL788ss8qeXMmTPy9vaWp6fnTT1vamqqQkNDb9r5Ll68qJycnOvWWbp0aXXp0sX+fa9evVSkSBGNHTtWu3fvVtWqVZ3Gr1q1SocPH9aKFSsUERGhr776SlFRUVc995133ul07vvuu0+tW7fWlClTNHnyZFWqVMlpfJ8+fVSpUiWn1wDAfwlTnoD/sDFjxuj06dOaPn26UzNxWZUqVfTiiy/av7948aJGjhypypUry2q1qkKFCnr11VeVlZXl9LoKFSqobdu2WrNmje666y4VLlxYlSpV0ieffGIfM3z4cJUvX16SNGjQIKdpIt27d7/qlJHhw4fLYrE47YuPj9e9994rf39/FSlSRNWrV9err75qP36tNRQrVqzQfffdJx8fH/n7+6tdu3bauXPnVa+3Z88ede/eXf7+/vLz81OPHj105syZa3+w//Dkk0/q+++/18mTJ+37NmzYoN27d+vJJ5+8YvyJEyf00ksvqXbt2ipSpIh8fX3VunVrbdmyxT5m1apVatSokSSpR48e9qk2l99n8+bNVatWLW3atElNmzaVt7e3/XP55xqKqKgoFS5c+Ir3HxERoWLFiunIkSNXfV+rVq2SxWLRvn379N1339lr2L9/v6RLjUbPnj0VFBSkwoULq27dupo1a5bTOS7/+YwdO1bjx4+3/93asWNHrj5bR8HBwZIupUL/NHfuXIWGhqpFixYKDw/X3Llzc33e++67T9KlqYEAgCuRUAD/Yd9++60qVaqke+65J1fje/XqpVmzZqlTp04aOHCg1q1bp7i4OO3cuVMLFy50Grtnzx516tRJPXv2VFRUlP73v/+pe/fuatCgge644w516NBB/v7+GjBggH2KidFpItu3b1fbtm1Vp04djRgxQlarVXv27NHPP/983dctW7ZMrVu3VqVKlTR8+HCdPXtWH3zwgZo0aaJff/31imbmscceU8WKFRUXF6dff/1VH3/8sQIDA/X222/nqs4OHTqoT58++uqrr/T0009LupRO1KhRQ3feeecV4//8808tWrRIjz76qCpWrKiUlBRNmzZNzZo1044dOxQSEqKaNWtqxIgRGjp0qHr37m3/odfxz/L48eNq3bq1OnfurC5duigoKOiq9b3//vtasWKFoqKilJiYKHd3d02bNk0//vij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06ZNuvPOO686vnbt2srJyVFCQoJ9ypOjywlJdna2fV9oaKisVqsOHjx4zWSjZs2a+uabb5z2/fLLLzd+kwCA/zwWZQPALfLUU0+pRIkSateunX766Sft27dPq1at0gsvvKDDhw9Lkl588UWNHj1aixYt0u+//67nnnvuus+QqFChgqKiovT0009r0aJF9nN+/vnnkqTy5cvLYrFo8eLFSktL0+nTp1W0aFG99NJLGjBggGbNmqW9e/fq119/1QcffKBZs2ZJkvr06aPdu3dr0KBB2rVrl+bNm6eZM2fe6o8IAHAboKEAgFvE29tbq1evVrly5dShQwfVrFlTPXv21Llz5+yJxcCBA9W1a1dFRUUpLCxMRYsW1SOPPHLd806ZMkWdOnXSc889pxo1auiZZ55RZmamJKl06dJ644039MorrygoKEj9+vWTJI0cOVKvv/664uLiVLNmTT344IP67rvvVLFiRUlSuXLl9OWXX2rRokWqW7eupk6dqlGjRt3CTwcAcLuw2K618g8AAAAAboCEAgAAAIBpNBQAAAAATKOhAAAAAGAaDQUAAAAA02goAAAAAJhGQwEAAADANBoKAAAAAKbRUAAAAAAwjYYCAAAAgGk0FAAAAABMo6EAAAAAYNr/AyUWsxFV5j0XAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some non-default generation parameters are set in the model config. These should go into a GenerationConfig file (https://huggingface.co/docs/transformers/generation_strategies#save-a-custom-decoding-strategy-with-your-model) instead. This warning will be raised to an exception in v4.41.\n",
            "Non-default generation parameters: {'early_stopping': True, 'num_beams': 4, 'no_repeat_ngram_size': 3, 'forced_bos_token_id': 0, 'forced_eos_token_id': 2}\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training T5 - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training T5: 100%|██████████| 500/500 [01:28<00:00,  5.63it/s]\n",
            "Evaluating T5: 100%|██████████| 125/125 [00:09<00:00, 12.76it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.6986, Val Loss: 0.0503, Val Accuracy: 0.5985\n",
            "\n",
            "Confusion Matrix for T5:\n",
            "[[532  38 232]\n",
            " [151  50 188]\n",
            " [148  46 615]]\n",
            "\n",
            "Classification Report for T5:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.64      0.66      0.65       802\n",
            "     neutral       0.37      0.13      0.19       389\n",
            "    positive       0.59      0.76      0.67       809\n",
            "\n",
            "    accuracy                           0.60      2000\n",
            "   macro avg       0.54      0.52      0.50      2000\n",
            "weighted avg       0.57      0.60      0.57      2000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Define class weights\n",
        "class_weights = torch.tensor([1.0, 2.0, 1.0])\n",
        "\n",
        "trained_models = {}\n",
        "for model_name, config in model_configs.items():\n",
        "    tokenizer = config['tokenizer']\n",
        "    model = config['model']\n",
        "\n",
        "    train_inputs, train_labels = tokenize_data(train_data, tokenizer, slang_dict, model_name)\n",
        "    val_inputs, val_labels = tokenize_data(val_data, tokenizer, slang_dict, model_name)\n",
        "    test_inputs, test_labels = tokenize_data(test_data, tokenizer, slang_dict, model_name)\n",
        "\n",
        "    train_dataset = YelpDataset(train_inputs, train_labels)\n",
        "    val_dataset = YelpDataset(val_inputs, val_labels)\n",
        "    test_dataset = YelpDataset(test_inputs, test_labels)\n",
        "\n",
        "    train_loader = DataLoader(train_dataset, batch_size=16, shuffle=True)\n",
        "    val_loader = DataLoader(val_dataset, batch_size=16)\n",
        "    test_loader = DataLoader(test_dataset, batch_size=16)\n",
        "\n",
        "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "    model.to(device)\n",
        "\n",
        "    optimizer = get_optimizer(model)\n",
        "\n",
        "    epochs = 1\n",
        "    for epoch in range(epochs):\n",
        "        print(f\"Training {model_name} - Epoch {epoch + 1}/{epochs}\")\n",
        "        if model_name == 'T5':\n",
        "            train_loss = train_t5(model, train_loader, optimizer, device, model_name)\n",
        "            val_loss, val_accuracy, val_labels, val_preds = evaluate_t5(model, val_loader, device, tokenizer, model_name)\n",
        "        else:\n",
        "            train_loss = train(model, train_loader, optimizer, device, class_weights, model_name)\n",
        "            val_loss, val_accuracy, val_labels, val_preds = evaluate(model, val_loader, device, tokenizer, model_name, class_weights)\n",
        "        print(f\"Train Loss: {train_loss:.4f}, Val Loss: {val_loss:.4f}, Val Accuracy: {val_accuracy:.4f}\")\n",
        "\n",
        "    conf_matrix = confusion_matrix(val_labels, val_preds)\n",
        "    class_report = classification_report(val_labels, val_preds, target_names=['negative', 'neutral', 'positive'], zero_division=1)\n",
        "\n",
        "    print(f\"\\nConfusion Matrix for {model_name}:\")\n",
        "    print(conf_matrix)\n",
        "\n",
        "    print(f\"\\nClassification Report for {model_name}:\")\n",
        "    print(class_report)\n",
        "\n",
        "    plt.figure(figsize=(10, 8))\n",
        "    sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')\n",
        "    plt.xlabel('Predicted')\n",
        "    plt.ylabel('Actual')\n",
        "    plt.title(f'Confusion Matrix for {model_name}')\n",
        "    plt.show()\n",
        "\n",
        "    trained_models[model_name] = {\n",
        "        'model': model,\n",
        "        'tokenizer': tokenizer,\n",
        "        'val_loss': val_loss,\n",
        "        'val_accuracy': val_accuracy,\n",
        "        'conf_matrix': conf_matrix,\n",
        "        'class_report': class_report\n",
        "    }\n",
        "\n",
        "    model_save_path = f\"{model_name}_model\"\n",
        "    model.save_pretrained(model_save_path)\n",
        "    tokenizer.save_pretrained(model_save_path)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Hyperparameter Optimization with Optuna"
      ],
      "metadata": {
        "id": "kieRZLxPYzE2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the Optuna Objective Function\n",
        "def objective(trial):\n",
        "    \"\"\"\n",
        "    Objective function for Optuna hyperparameter optimization.\n",
        "\n",
        "    Parameters:\n",
        "    trial (optuna.trial.Trial): A single optimization trial.\n",
        "\n",
        "    Returns:\n",
        "    float: The evaluation accuracy of the trained model.\n",
        "    \"\"\"\n",
        "    learning_rate = trial.suggest_float(\"learning_rate\", 1e-5, 5e-5, log=True)\n",
        "    batch_size = trial.suggest_categorical(\"batch_size\", [8, 16, 32])\n",
        "    weight_decay = trial.suggest_float(\"weight_decay\", 0.0, 0.1, step=0.01)\n",
        "\n",
        "    # Train the model\n",
        "    model, eval_results = train_model(\n",
        "        'distilbert-base-uncased',\n",
        "        DistilBertForSequenceClassification,\n",
        "        DistilBertTokenizer,\n",
        "        num_labels=3,\n",
        "        learning_rate=learning_rate,\n",
        "        batch_size=batch_size,\n",
        "        weight_decay=weight_decay,\n",
        "        num_epochs=1,\n",
        "        class_weights=class_weights\n",
        "    )\n",
        "\n",
        "    if 'eval_accuracy' in eval_results:\n",
        "        return eval_results['eval_accuracy']\n",
        "    else:\n",
        "        raise KeyError(\"eval_accuracy not found in eval_results\")\n",
        "\n",
        "# Create and Run Optuna Study\n",
        "study = optuna.create_study(direction=\"maximize\")\n",
        "study.optimize(objective, n_trials=20)\n",
        "\n",
        "# Print Best Hyperparameters\n",
        "print(\"Best Hyperparameters: \", study.best_params)\n",
        "best_params = study.best_params"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hyr49yC1Y1J1",
        "outputId": "a02ad272-ec11-40fb-9e8a-245c30e48002"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[I 2024-06-09 14:28:53,743] A new study created in memory with name: no-name-8c8d2476-5697-4043-9388-563a7ab1e2cc\n",
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 500/500 [00:20<00:00, 23.87it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 125/125 [00:00<00:00, 162.84it/s]\n",
            "[I 2024-06-09 14:29:43,828] Trial 0 finished with value: 0.5765 and parameters: {'learning_rate': 4.003345563910095e-05, 'batch_size': 16, 'weight_decay': 0.03}. Best is trial 0 with value: 0.5765.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9406, Val Loss: 0.9024, Val Accuracy: 0.5765\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 250/250 [00:11<00:00, 21.76it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 63/63 [00:00<00:00, 126.11it/s]\n",
            "[I 2024-06-09 14:30:25,131] Trial 1 finished with value: 0.595 and parameters: {'learning_rate': 1.1063941441355456e-05, 'batch_size': 32, 'weight_decay': 0.01}. Best is trial 1 with value: 0.595.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9740, Val Loss: 0.8853, Val Accuracy: 0.5950\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 250/250 [00:11<00:00, 21.96it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 63/63 [00:00<00:00, 126.07it/s]\n",
            "[I 2024-06-09 14:31:05,339] Trial 2 finished with value: 0.5565 and parameters: {'learning_rate': 4.3295272033352385e-05, 'batch_size': 32, 'weight_decay': 0.03}. Best is trial 1 with value: 0.595.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9621, Val Loss: 0.8686, Val Accuracy: 0.5565\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 250/250 [00:11<00:00, 22.09it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 63/63 [00:00<00:00, 127.63it/s]\n",
            "[I 2024-06-09 14:31:45,848] Trial 3 finished with value: 0.555 and parameters: {'learning_rate': 1.9294888624396877e-05, 'batch_size': 32, 'weight_decay': 0.02}. Best is trial 1 with value: 0.595.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9569, Val Loss: 0.8964, Val Accuracy: 0.5550\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 500/500 [00:20<00:00, 23.82it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 125/125 [00:00<00:00, 156.90it/s]\n",
            "[I 2024-06-09 14:32:36,051] Trial 4 finished with value: 0.587 and parameters: {'learning_rate': 1.065273081571997e-05, 'batch_size': 16, 'weight_decay': 0.1}. Best is trial 1 with value: 0.595.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9575, Val Loss: 0.8876, Val Accuracy: 0.5870\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 500/500 [00:20<00:00, 23.96it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 125/125 [00:00<00:00, 160.69it/s]\n",
            "[I 2024-06-09 14:33:26,025] Trial 5 finished with value: 0.5835 and parameters: {'learning_rate': 3.555706664060034e-05, 'batch_size': 16, 'weight_decay': 0.01}. Best is trial 1 with value: 0.595.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9406, Val Loss: 0.8575, Val Accuracy: 0.5835\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 250/250 [00:11<00:00, 21.99it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 63/63 [00:00<00:00, 128.66it/s]\n",
            "[I 2024-06-09 14:34:06,196] Trial 6 finished with value: 0.601 and parameters: {'learning_rate': 2.1875918751063956e-05, 'batch_size': 32, 'weight_decay': 0.01}. Best is trial 6 with value: 0.601.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9643, Val Loss: 0.8767, Val Accuracy: 0.6010\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 500/500 [00:21<00:00, 23.17it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 125/125 [00:00<00:00, 155.62it/s]\n",
            "[I 2024-06-09 14:34:57,014] Trial 7 finished with value: 0.603 and parameters: {'learning_rate': 3.786993068913013e-05, 'batch_size': 16, 'weight_decay': 0.02}. Best is trial 7 with value: 0.603.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9365, Val Loss: 0.8698, Val Accuracy: 0.6030\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 250/250 [00:11<00:00, 22.03it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 63/63 [00:00<00:00, 129.10it/s]\n",
            "[I 2024-06-09 14:35:37,589] Trial 8 finished with value: 0.5825 and parameters: {'learning_rate': 2.457670083858578e-05, 'batch_size': 32, 'weight_decay': 0.02}. Best is trial 7 with value: 0.603.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9567, Val Loss: 0.8692, Val Accuracy: 0.5825\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:42<00:00, 23.71it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 160.43it/s]\n",
            "[I 2024-06-09 14:36:49,678] Trial 9 finished with value: 0.6165 and parameters: {'learning_rate': 1.892692711456662e-05, 'batch_size': 8, 'weight_decay': 0.09}. Best is trial 9 with value: 0.6165.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9407, Val Loss: 0.8703, Val Accuracy: 0.6165\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:41<00:00, 23.84it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 157.68it/s]\n",
            "[I 2024-06-09 14:38:01,610] Trial 10 finished with value: 0.623 and parameters: {'learning_rate': 1.4312617861039796e-05, 'batch_size': 8, 'weight_decay': 0.09}. Best is trial 10 with value: 0.623.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9362, Val Loss: 0.8713, Val Accuracy: 0.6230\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:41<00:00, 24.09it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 161.10it/s]\n",
            "[I 2024-06-09 14:39:13,062] Trial 11 finished with value: 0.624 and parameters: {'learning_rate': 1.4710477923515136e-05, 'batch_size': 8, 'weight_decay': 0.09}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9401, Val Loss: 0.8746, Val Accuracy: 0.6240\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:42<00:00, 23.81it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 160.27it/s]\n",
            "[I 2024-06-09 14:40:25,130] Trial 12 finished with value: 0.5905 and parameters: {'learning_rate': 1.4413047474253779e-05, 'batch_size': 8, 'weight_decay': 0.07}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9400, Val Loss: 0.8737, Val Accuracy: 0.5905\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:41<00:00, 24.14it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 160.87it/s]\n",
            "[I 2024-06-09 14:41:36,392] Trial 13 finished with value: 0.5995 and parameters: {'learning_rate': 1.5090455879338343e-05, 'batch_size': 8, 'weight_decay': 0.07}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9359, Val Loss: 0.8688, Val Accuracy: 0.5995\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:41<00:00, 24.08it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 154.40it/s]\n",
            "[I 2024-06-09 14:42:47,653] Trial 14 finished with value: 0.613 and parameters: {'learning_rate': 1.4191471725113883e-05, 'batch_size': 8, 'weight_decay': 0.08}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9420, Val Loss: 0.8567, Val Accuracy: 0.6130\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:40<00:00, 24.43it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 160.11it/s]\n",
            "[I 2024-06-09 14:43:58,356] Trial 15 finished with value: 0.566 and parameters: {'learning_rate': 2.946416221555663e-05, 'batch_size': 8, 'weight_decay': 0.05}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9438, Val Loss: 0.9274, Val Accuracy: 0.5660\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:40<00:00, 24.55it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 160.83it/s]\n",
            "[I 2024-06-09 14:45:09,043] Trial 16 finished with value: 0.582 and parameters: {'learning_rate': 1.222279747364755e-05, 'batch_size': 8, 'weight_decay': 0.1}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9386, Val Loss: 0.8671, Val Accuracy: 0.5820\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:41<00:00, 24.33it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 157.46it/s]\n",
            "[I 2024-06-09 14:46:19,905] Trial 17 finished with value: 0.5935 and parameters: {'learning_rate': 1.6503149976147503e-05, 'batch_size': 8, 'weight_decay': 0.06}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9397, Val Loss: 0.8793, Val Accuracy: 0.5935\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:41<00:00, 24.35it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 159.22it/s]\n",
            "[I 2024-06-09 14:47:30,558] Trial 18 finished with value: 0.581 and parameters: {'learning_rate': 1.25423756328674e-05, 'batch_size': 8, 'weight_decay': 0.05}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9351, Val Loss: 0.8692, Val Accuracy: 0.5810\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:40<00:00, 24.54it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 158.85it/s]\n",
            "[I 2024-06-09 14:48:40,935] Trial 19 finished with value: 0.6015 and parameters: {'learning_rate': 1.8679674269557538e-05, 'batch_size': 8, 'weight_decay': 0.09}. Best is trial 11 with value: 0.624.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9410, Val Loss: 0.8926, Val Accuracy: 0.6015\n",
            "Best Hyperparameters:  {'learning_rate': 1.4710477923515136e-05, 'batch_size': 8, 'weight_decay': 0.09}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Training the Best Model with Optimized Hyperparameters"
      ],
      "metadata": {
        "id": "GJ4Pl6w6ZuNT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Function to train the best model\n",
        "def train_best_model(model_name, model_class, tokenizer_class, num_labels, best_params, num_epochs, class_weights):\n",
        "    tokenizer = tokenizer_class.from_pretrained(model_name)\n",
        "    model = model_class.from_pretrained(model_name, num_labels=num_labels)\n",
        "\n",
        "    train_inputs, train_labels = tokenize_data(train_data, tokenizer, slang_dict, model_name)\n",
        "    val_inputs, val_labels = tokenize_data(val_data, tokenizer, slang_dict, model_name)\n",
        "\n",
        "    train_dataset = YelpDataset(train_inputs, train_labels)\n",
        "    val_dataset = YelpDataset(val_inputs, val_labels)\n",
        "\n",
        "    train_loader = DataLoader(train_dataset, batch_size=best_params[\"batch_size\"], shuffle=True)\n",
        "    val_loader = DataLoader(val_dataset, batch_size=best_params[\"batch_size\"])\n",
        "\n",
        "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "    model.to(device)\n",
        "\n",
        "    optimizer = optim.AdamW(model.parameters(), lr=best_params[\"learning_rate\"], weight_decay=best_params[\"weight_decay\"])\n",
        "\n",
        "    for epoch in range(num_epochs):\n",
        "        print(f\"Training {model_name} - Epoch {epoch + 1}/{num_epochs}\")\n",
        "        if model_name == 'T5':\n",
        "            train_loss = train_t5(model, train_loader, optimizer, device, model_name)\n",
        "            val_loss, val_accuracy, val_labels, val_preds = evaluate_t5(model, val_loader, device, tokenizer, model_name)\n",
        "        else:\n",
        "            train_loss = train(model, train_loader, optimizer, device, class_weights, model_name)\n",
        "            val_loss, val_accuracy, val_labels, val_preds = evaluate(model, val_loader, device, tokenizer, model_name, class_weights)\n",
        "        print(f\"Train Loss: {train_loss:.4f}, Val Loss: {val_loss:.4f}, Val Accuracy: {val_accuracy:.4f}\")\n",
        "\n",
        "    return model, {\"eval_loss\": val_loss, \"eval_accuracy\": val_accuracy}\n",
        "\n",
        "best_model, best_eval_results = train_best_model(\n",
        "    'distilbert-base-uncased',\n",
        "    DistilBertForSequenceClassification,\n",
        "    DistilBertTokenizer,\n",
        "    num_labels=3,\n",
        "    best_params=best_params,\n",
        "    num_epochs=3,\n",
        "    class_weights=class_weights\n",
        ")\n",
        "\n",
        "print(f\"Best Model Evaluation Results: {best_eval_results}\")\n",
        "\n",
        "best_val_loss, best_val_accuracy, best_val_labels, best_val_preds = evaluate(\n",
        "    best_model,\n",
        "    DataLoader(YelpDataset(*tokenize_data(val_data, DistilBertTokenizer.from_pretrained('distilbert-base-uncased'), slang_dict, 'distilbert-base-uncased')), batch_size=best_params[\"batch_size\"]),\n",
        "    torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\"),\n",
        "    DistilBertTokenizer.from_pretrained('distilbert-base-uncased'),\n",
        "    'distilbert-base-uncased',\n",
        "    class_weights\n",
        ")\n",
        "conf_matrix = confusion_matrix(best_val_labels, best_val_preds)\n",
        "class_report = classification_report(best_val_labels, best_val_preds, target_names=['negative', 'neutral', 'positive'], zero_division=1)\n",
        "\n",
        "print(f\"\\nConfusion Matrix for Best Model:\")\n",
        "print(conf_matrix)\n",
        "\n",
        "print(f\"\\nClassification Report for Best Model:\")\n",
        "print(class_report)\n",
        "\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')\n",
        "plt.xlabel('Predicted')\n",
        "plt.ylabel('Actual')\n",
        "plt.title(f'Confusion Matrix for Best Model')\n",
        "plt.show()\n",
        "\n",
        "best_model_save_path = \"best_model\"\n",
        "best_model.save_pretrained(best_model_save_path)\n",
        "DistilBertTokenizer.from_pretrained('distilbert-base-uncased').save_pretrained(best_model_save_path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4GFT23peZz7y",
        "outputId": "10c10e08-b4f7-4e3b-c19a-0e394b42d8d5"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training distilbert-base-uncased - Epoch 1/3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:40<00:00, 24.47it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 162.13it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.9364, Val Loss: 0.8633, Val Accuracy: 0.5955\n",
            "Training distilbert-base-uncased - Epoch 2/3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:40<00:00, 24.57it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 160.42it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.7751, Val Loss: 0.8763, Val Accuracy: 0.6005\n",
            "Training distilbert-base-uncased - Epoch 3/3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Training distilbert-base-uncased: 100%|██████████| 1000/1000 [00:41<00:00, 24.36it/s]\n",
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 161.87it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Train Loss: 0.5946, Val Loss: 0.9674, Val Accuracy: 0.5950\n",
            "Best Model Evaluation Results: {'eval_loss': 0.9674294611215591, 'eval_accuracy': 0.595}\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Evaluating distilbert-base-uncased: 100%|██████████| 250/250 [00:01<00:00, 161.71it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Confusion Matrix for Best Model:\n",
            "[[494 206 102]\n",
            " [ 97 205  87]\n",
            " [117 201 491]]\n",
            "\n",
            "Classification Report for Best Model:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.70      0.62      0.65       802\n",
            "     neutral       0.33      0.53      0.41       389\n",
            "    positive       0.72      0.61      0.66       809\n",
            "\n",
            "    accuracy                           0.59      2000\n",
            "   macro avg       0.58      0.58      0.57      2000\n",
            "weighted avg       0.64      0.59      0.61      2000\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('best_model/tokenizer_config.json',\n",
              " 'best_model/special_tokens_map.json',\n",
              " 'best_model/vocab.txt',\n",
              " 'best_model/added_tokens.json')"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Evaluate on Test Dataset Function"
      ],
      "metadata": {
        "id": "MpPETAXVcGgf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Function to evaluate on test dataset\n",
        "def evaluate_on_test_dataset(model, test_dataset, tokenizer, class_weights):\n",
        "    \"\"\"\n",
        "    Evaluates the trained model on the test dataset.\n",
        "\n",
        "    Parameters:\n",
        "    model (nn.Module): The trained model.\n",
        "    test_dataset (pd.DataFrame): The test dataset.\n",
        "    tokenizer (PreTrainedTokenizer): The tokenizer used for tokenizing the test data.\n",
        "    class_weights (torch.Tensor): Class weights for the loss function.\n",
        "\n",
        "    Returns:\n",
        "    None\n",
        "    \"\"\"\n",
        "    # Tokenize the test dataset\n",
        "    test_inputs, test_labels = tokenize_data(test_dataset, tokenizer, slang_dict, 'distilbert-base-uncased')\n",
        "    test_dataset = YelpDataset(test_inputs, test_labels)\n",
        "    test_loader = DataLoader(test_dataset, batch_size=best_params[\"batch_size\"])\n",
        "\n",
        "    # Evaluate the model\n",
        "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "    model.to(device)\n",
        "    test_loss, test_accuracy, test_labels, test_preds = evaluate(model, test_loader, device, tokenizer, 'distilbert-base-uncased', class_weights)\n",
        "\n",
        "    # Classification report\n",
        "    print(\"Classification Report on Test Dataset:\")\n",
        "    print(classification_report(test_labels, test_preds, target_names=['negative', 'neutral', 'positive'], zero_division=1))\n",
        "\n",
        "    # Confusion matrix\n",
        "    cm = confusion_matrix(test_labels, test_preds)\n",
        "    plt.figure(figsize=(10, 8))\n",
        "    sns.heatmap(cm, annot=True, fmt='d', xticklabels=['negative', 'neutral', 'positive'], yticklabels=['negative', 'neutral', 'positive'], cmap='Blues')\n",
        "    plt.xlabel('Predicted')\n",
        "    plt.ylabel('True')\n",
        "    plt.title('Confusion Matrix on Test Dataset')\n",
        "    plt.show()\n",
        "\n",
        "# Evaluate the best model on the test dataset\n",
        "evaluate_on_test_dataset(best_model, test_data, DistilBertTokenizer.from_pretrained('distilbert-base-uncased'), class_weights)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 926
        },
        "id": "WWHOoE1tcIt3",
        "outputId": "e0fd40a4-fe9f-4292-aa36-98ba9b140c0e"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Evaluating distilbert-base-uncased: 100%|██████████| 313/313 [00:01<00:00, 160.77it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Classification Report on Test Dataset:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "    negative       0.73      0.63      0.68      1061\n",
            "     neutral       0.31      0.50      0.38       474\n",
            "    positive       0.71      0.59      0.64       965\n",
            "\n",
            "    accuracy                           0.59      2500\n",
            "   macro avg       0.58      0.58      0.57      2500\n",
            "weighted avg       0.64      0.59      0.61      2500\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Load the trained models and tokenizers for prediction\n",
        "loaded_models = {}\n",
        "for model_name in model_configs.keys():\n",
        "    model_save_path = f\"{model_name}_model\"\n",
        "    tokenizer = BertTokenizer.from_pretrained(model_save_path) if model_name == 'BERT' else \\\n",
        "                RobertaTokenizer.from_pretrained(model_save_path) if model_name == 'RoBERTa' else \\\n",
        "                DistilBertTokenizer.from_pretrained(model_save_path) if model_name == 'DistilBERT' else \\\n",
        "                GPT2Tokenizer.from_pretrained(model_save_path) if model_name == 'GPT-2' else \\\n",
        "                BartTokenizer.from_pretrained(model_save_path) if model_name == 'BART' else \\\n",
        "                T5Tokenizer.from_pretrained(model_save_path)\n",
        "    model = BertForSequenceClassification.from_pretrained(model_save_path) if model_name == 'BERT' else \\\n",
        "            RobertaForSequenceClassification.from_pretrained(model_save_path) if model_name == 'RoBERTa' else \\\n",
        "            DistilBertForSequenceClassification.from_pretrained(model_save_path) if model_name == 'DistilBERT' else \\\n",
        "            GPT2ForSequenceClassification.from_pretrained(model_save_path) if model_name == 'GPT-2' else \\\n",
        "            BartForSequenceClassification.from_pretrained(model_save_path) if model_name == 'BART' else \\\n",
        "            T5ForConditionalGeneration.from_pretrained(model_save_path)\n",
        "    loaded_models[model_name] = {'model': model, 'tokenizer': tokenizer}\n",
        "\n",
        "# Add the best model\n",
        "loaded_models['DistilBERT_Optimized'] = {\n",
        "    'model': best_model,\n",
        "    'tokenizer': DistilBertTokenizer.from_pretrained(best_model_save_path)\n",
        "}\n",
        "# Ensure id2label mapping\n",
        "id2label = {0: 'negative', 1: 'neutral', 2: 'positive'}\n",
        "\n",
        "# Funktion zur Erstellung einer GenerationConfig für T5\n",
        "def create_generation_config():\n",
        "    return GenerationConfig(\n",
        "        early_stopping=True,\n",
        "        num_beams=4,\n",
        "        no_repeat_ngram_size=3,\n",
        "        forced_bos_token_id=0,\n",
        "        forced_eos_token_id=2\n",
        "    )\n",
        "\n",
        "# Function for making predictions with all models\n",
        "def classify_text(text):\n",
        "    print(f\"Classifying text: {text}\")\n",
        "    predictions = {}\n",
        "\n",
        "    for model_name, model_info in loaded_models.items():\n",
        "        tokenizer = model_info['tokenizer']\n",
        "        model = model_info['model']\n",
        "        inputs = tokenizer(text, return_tensors='pt', truncation=True, padding=True, max_length=128).to(device)\n",
        "\n",
        "        model.to(device)\n",
        "        model.eval()\n",
        "        with torch.no_grad():\n",
        "            if model_name == 'T5':\n",
        "                generation_config = create_generation_config()\n",
        "                outputs = model.generate(input_ids=inputs['input_ids'], attention_mask=inputs['attention_mask'], generation_config=generation_config)\n",
        "                prediction = tokenizer.decode(outputs[0], skip_special_tokens=True)\n",
        "                if prediction in [\"positive\", \"neutral\", \"negative\"]:\n",
        "                    predictions[model_name] = prediction\n",
        "                else:\n",
        "                    predictions[model_name] = \"unknown\"\n",
        "            else:\n",
        "                outputs = model(**inputs)\n",
        "                prediction = torch.argmax(outputs.logits, dim=1).item()\n",
        "                predictions[model_name] = id2label[prediction]\n",
        "\n",
        "    return predictions\n",
        "\n",
        "# Function to retrieve and classify a text based on the given index\n",
        "def get_text(index):\n",
        "    try:\n",
        "        print(f\"Retrieving text for index: {index}\")\n",
        "        index = int(index.split(\":\")[0])\n",
        "        print(f\"Converted index: {index}\")\n",
        "        if index < 0 or index >= len(test_data):\n",
        "            print(\"Index out of range error\")\n",
        "            raise IndexError(\"Index out of range\")\n",
        "        text = test_data.iloc[index]['text']\n",
        "        label = id2label[test_data.iloc[index]['label']]\n",
        "        print(f\"Retrieved text: {text}\")\n",
        "        print(f\"Label: {label}\")\n",
        "        return text, label\n",
        "    except Exception as e:\n",
        "        print(f\"Error in get_text: {e}\")\n",
        "        return \"\", \"\"\n",
        "\n",
        "def get_results_for_text(index):\n",
        "    try:\n",
        "        print(f\"Selected index: {index}\")\n",
        "        text, label = get_text(index)\n",
        "        if text == \"\":\n",
        "            return {\"Error\": \"Invalid index or text not found\"}, \"\"\n",
        "        results = classify_text(text)\n",
        "        results['Actual Label'] = label\n",
        "        return results, text\n",
        "    except Exception as e:\n",
        "        print(f\"Error in get_results_for_text: {e}\")\n",
        "        return {\"Error\": f\"An error occurred: {e}\"}, \"\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a0mx28wddZRi",
        "outputId": "3c1c86e7-931e-4564-bb9b-a7f4e87c6783"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Gradio Interface for Text Classification\n",
        "text_picker = gr.Dropdown(\n",
        "    choices=[f\"{i}: {text[:50]}\" for i, text in enumerate(test_data['text'])],\n",
        "    label=\"Select a Text\",\n",
        "    interactive=True\n",
        ")\n",
        "\n",
        "interface = gr.Interface(\n",
        "    fn=get_results_for_text,\n",
        "    inputs=[text_picker],\n",
        "    outputs=[gr.Json(label=\"Predictions\"), gr.Textbox(label=\"Selected Text\")],\n",
        "    title=\"Text Classification\"\n",
        ")\n",
        "\n",
        "interface.launch()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 645
        },
        "id": "UIfSDzj48zNF",
        "outputId": "a15e7116-8150-4824-b10b-dde4aa6fe65f"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Setting queue=True in a Colab notebook requires sharing enabled. Setting `share=True` (you can turn this off by setting `share=False` in `launch()` explicitly).\n",
            "\n",
            "Colab notebook detected. To show errors in colab notebook, set debug=True in launch()\n",
            "Running on public URL: https://f04b00fcea3477190f.gradio.live\n",
            "\n",
            "This share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<div><iframe src=\"https://f04b00fcea3477190f.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": []
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "L4"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.13"
    },
    "accelerator": "GPU"
  },
  "nbformat": 4,
  "nbformat_minor": 0
}